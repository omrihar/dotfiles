#!/bin/env python2

# This script watches the selected files for changes and recompiles the pdf
# with pandoc on change.

import pyinotify
import os.path
import sys
import subprocess
from optparse import OptionParser


class FileModifyWatcher(object):

    def __init__(self, file_list):
        self.file_list = set([os.path.abspath(f) for f in file_list])
        self.watch_dirs = set([os.path.dirname(f) for f in self.file_list])

        # Compile the files for the first time
        for f in file_list:
            if f[-3:] == ".md":
                subprocess.call(["pandoc", "-o", f[:-3] + ".pdf", "-t",
                                 "beamer", "-V", "theme:metropolis",
                                 "--pdf-engine", "xelatex", f])
                # Open external viewer
                subprocess.Popen(["zathura", f[:-3] + ".pdf"], stdin=None,
                        stdout=None, stderr=None)

    def handle_event(self, event):
        if event.pathname in self.file_list:
            filename = os.path.basename(event.pathname)
            if filename[-3:] == ".md":
                print "Recompiling %s..." % filename
                subprocess.call(["pandoc", "-o", f[:-3] + ".pdf", "-t",
                                 "beamer", "-V", "theme:metropolis",
                                 "--pdf-engine", "xelatex", f])

    def loop(self):
        handle_event = self.handle_event

        class EventHandler(pyinotify.ProcessEvent):
            def process_default(self, event):
                handle_event(event)

        wm = pyinotify.WatchManager()  # Watch Manager
        mask = pyinotify.IN_CLOSE_WRITE
        ev = EventHandler()
        notifier = pyinotify.Notifier(wm, ev)

        for watch_this in self.watch_dirs:
            wm.add_watch(watch_this, mask)

        notifier.loop()

#def parse_options():
    #parser = OptionParser()
    #parser.add_option()

if __name__ == "__main__":
    if len(sys.argv) >= 2:
        print "Watching the following files: \n%s" % "\n".join(sys.argv[1:])
        fw = FileModifyWatcher(sys.argv[1:])
        fw.loop()
    else:
        print "You need to supply a list of markdown files for this to work..."
